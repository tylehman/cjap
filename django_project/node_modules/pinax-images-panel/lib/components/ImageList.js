'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Thumbnail = require('./Thumbnail');

var _Thumbnail2 = _interopRequireDefault(_Thumbnail);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ImageList = function (_React$Component) {
    _inherits(ImageList, _React$Component);

    function ImageList(props) {
        _classCallCheck(this, ImageList);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ImageList).call(this, props));

        _this.handleSelectImage = _this.handleSelectImage.bind(_this);
        _this.render = _this.render.bind(_this);
        return _this;
    }

    _createClass(ImageList, [{
        key: 'handleSelectImage',
        value: function handleSelectImage(image) {
            this.props.onSelectImage(image);
        }
    }, {
        key: 'render',
        value: function render() {
            var handleSelectImage = this.handleSelectImage;
            var thumbnails = this.props.images.map(function (image, index) {
                return _react2.default.createElement(_Thumbnail2.default, { onSelectImage: handleSelectImage, image: image, key: index });
            });
            return _react2.default.createElement(
                'div',
                { className: 'col-md-3 image-list' },
                thumbnails
            );
        }
    }]);

    return ImageList;
}(_react2.default.Component);

ImageList.propTypes = {
    images: _react2.default.PropTypes.array.isRequired,
    onSelectImage: _react2.default.PropTypes.func.isRequired
};

module.exports = ImageList;